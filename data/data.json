{"_id":{"$oid":"5a671a48f26229172b81fc2f"},"name":"Composer","ring":"adopt","quadrant":"tools2","isNews":"FALSE","description":"Although the idea of dependency management is not new and considered to be a fundamental development practice, it is not widely adopted by the PHP community. \u003cstrong\u003e\u003ca href=\"https://getcomposer.org\"\u003eComposer\u003c/a\u003e\u003c/strong\u003e is a tool for dependency management in PHP. It is strongly influenced by tools from other technology stacks like Node's npm and Ruby's Bundler. We are now seeing wide adoption across PHP projects and it is fairly mature. You can still have to do some shims for internal libraries, you can use it for most external libraries."}
{"_id":{"$oid":"5a671a48f26229172b81fc30"},"name":"Mountebank","ring":"adopt","quadrant":"tools2","isNews":false,"description":"Good testing of components in an enterprise system is critical\u0026nbsp;and with increased emphasis on service-based separation and deployment automation���critical factors for success with microservices���better tooling in this space is needed. The industry term ���service virtualization�۝ refers to tools that can emulate specific components in such an environment. We have seen great success with \u003ca href=\"http://www.mbtest.org/\"\u003e\u003cstrong\u003eMountebank\u003c/strong\u003e\u003c/a\u003e, a lightweight tool\u0026nbsp;for stubbing and mocking HTTP, HTTPS, SMTP and TCP."}
{"_id":{"$oid":"5a671a48f26229172b81fc31"},"name":"Postman","ring":"adopt","quadrant":"tools2","isNews":false,"description":"\u003cstrong\u003e\u003ca href=\"http://www.getpostman.com/features\"\u003ePostman\u003c/a\u003e\u003c/strong\u003e is a Chrome extension that acts as a REST client in your browser, allowing you to create requests and inspect responses. \u0026nbsp;It is a useful tool when developing an API\u0026nbsp;or implementing a client to call an existing API. Postman supports OAuth1 and OAuth2 tokens allowing addition of\u0026nbsp;them to requests where necessary. The response is available as a prettified JSON or XML. With Postman you are able to retrieve a history of requests performed to quickly edit and test the API response to different data. It offers a suite of extensions that allow you to use it as a full-blown test runner too, although we discourage\u0026nbsp;the record and replay style of testing it promotes.\u0026nbsp;"}
{"_id":{"$oid":"5a671a48f26229172b81fc32"},"name":"Browsersync","ring":"trial","quadrant":"tools2","isNews":"TRUE","description":"We've had rave reviews from a number of ThoughtWorks teams using \u003ca href=\"http://www.browsersync.io/\"\u003e\u003cstrong\u003eBrowsersync\u003c/strong\u003e\u003c/a\u003e. As the number of devices we deliver web applications to grows, so does the amount of effort that must be devoted to testing across these different devices. Browsersync is a free, open source tool that can dramatically reduce this effort by synchronizing manual browser testing across multiple mobile or desktop browsers. Providing both a CLI and a UI option, the tool is build-pipeline friendly and automates repetitive tasks such as form filling."}
{"_id":{"$oid":"5a671a48f26229172b81fc33"},"name":"Carthage","ring":"trial","quadrant":"tools2","isNews":"TRUE","description":"Dependency management in iOS and OS X projects used to be either completely manual or completely automatic as part of using \u003ca href=\"https://cocoapods.org/\"\u003eCocoaPods\u003c/a\u003e. With \u003cstrong\u003e\u003ca href=\"https://github.com/Carthage/Carthage\"\u003eCarthage\u003c/a\u003e \u003c/strong\u003e, a new middle ground has become available. Carthage manages dependencies - it downloads, builds and updates frameworks - but it leaves the integration of the frameworks into the build of the project to the project. This is in contrast to CocoaPods, which basically takes over the project structure and build setup. It should be noted that Carthage can only deal with dynamic frameworks, which are not available on iOS 7 and below."}
{"_id":{"$oid":"5a671a48f26229172b81fc36"},"name":"Gitrob","ring":"trial","quadrant":"tools","isNews":"TRUE","description":"Safely storing secrets such as passwords and access tokens in code repositories is now supported by a growing number of tools - for example, \u003ca href=\"https://github.com/AGWA/git-crypt\"\u003egit-crypt\u003c/a\u003e and \u003ca href=\"https://www.thoughtworks.com/radar/tools/blackbox\"\u003eBlackbox\u003c/a\u003e, which we mentioned in the previous Technology Radar. Despite the availability of these tools, it is still, unfortunately, all too common that secrets are stored unprotected. In fact, it is so common that automated exploit software is used to find AWS credentials and spin up EC2 instances to mine Bitcoins, leaving the attacker with the Bitcoins and the account owner with the bill. \u003ca href=\"https://github.com/michenriksen/gitrob\"\u003e\u003cstrong\u003eGitrob\u003c/strong\u003e\u003c/a\u003e takes a similar approach and scans an organization�۪s GitHub repositories, flagging all files that might contain sensitive information that shouldn�۪t have been pushed to the repository. This is obviously a reactive approach. Gitrob can only alert teams when it is (almost) too late. For this reason, Gitrob can only ever be a complementary tool, to minimize damage."}
{"_id":{"$oid":"5a671a48f26229172b81fc37"},"name":"GitUp","ring":"trial","quadrant":"tools","isNews":"TRUE","description":"Git can be confusing. Really confusing. And even when it�۪s used in a simple trunk-based development process, there are still enough nuances to how it works that people can tie themselves in knots from time to time. When this happens, having an understanding of how Git works under the hood is very useful, and \u003cstrong\u003e\u003ca href=\"http://gitup.co/\"\u003eGitUp\u003c/a\u003e \u003c/strong\u003eis a Mac-based tool that gives you exactly that. GitUp provides a graphical representation of what is happening as you type normal Git commands into the terminal. You can learn the various Git commands while also understanding what each one does as you use it. GitUp is a useful tool for both people new to Git and those with more Git experience."}
{"_id":{"$oid":"5a671a48f26229172b81fc38"},"name":"Hamms","ring":"trial","quadrant":"tools","isNews":"FALSE","description":"Many many wonderful stories of failure in our industry are caused by the assumption that networks are always reliable and servers respond quickly and correctly all the time. \u003ca href=\"https://github.com/kevinburke/hamms\"\u003e\u003cstrong\u003eHamms\u003c/strong\u003e\u003c/a\u003e is an interesting open-source tool which acts as a badly behaved HTTP server, triggering a number of failures including connection failures or slow and/or malformed responses. It may be useful for testing that your software handles failures gracefully."}
{"_id":{"$oid":"5a671a48f26229172b81fc39"},"name":"IndexedDB","ring":"trial","quadrant":"tools","isNews":"FALSE","description":"As single page applications and offline-first become more viable and widespread there is a growing need to persist data in the web browser. Local Storage is very easy to use and well supported by the web browsers. For more complex use cases, there is IndexedDB. While it can be a good solution we recommend to only use it when absolutely necessary, due to the increase in complexity and a somewhat clumsy API. We have also had positive experience with the \u003ca href=\"https://github.com/mozilla/localForage\"\u003elocalForage\u003c/a\u003e framework that provides an abstraction layer over the various persistence solutions."}
{"_id":{"$oid":"5a671a48f26229172b81fc3a"},"name":"Polly","ring":"trial","quadrant":"tools","isNews":"TRUE","description":"Several of our teams working on .NET projects have recommended \u003cstrong\u003e\u003ca href=\"https://github.com/michael-wolfenden/Polly\"\u003ePolly\u003c/a\u003e\u003c/strong\u003e as being useful in building microservice-based systems. It encourages the fluent expression of transient exception-handling policies and the Circuit Breaker pattern, including policies such as Retry, Retry Forever and Wait and Retry. Similar libraries already exist in other languages (Hystrix for Java for example), and Polly is a welcome addition from the .NET community. Integrating well with Polly is \u003cstrong\u003e\u003ca href=\"https://www.thoughtworks.com/radar/tools/brighter\"\u003eBrighter\u003c/a\u003e\u003c/strong\u003e. Brighter is another small open source .Net library that provides scaffolding to implement command invocation. Combining the two libraries provides useful circuit-breaking functionality especially in the context of the Ports and Adapters pattern and CQRS. Although they can be used separately, in the wild our teams find they work well together."}
{"_id":{"$oid":"5a671a48f26229172b81fc3b"},"name":"REST-assured","ring":"trial","quadrant":"tools","isNews":"FALSE","description":"\u003cstrong\u003e\u003ca href=\"https://code.google.com/p/rest-assured/\"\u003eREST-assured\u003c/a\u003e \u003c/strong\u003eis a Java domain specific language for testing and validating RESTful services. It simplifies the testing of REST based services built on top of HTTP Builder. REST-assured supports the different REST requests\u0026nbsp;and can be used to validate and verify the responses from the APIs. It also provides a JSON schema validation and can thus be used to verify that the endpoints are returning the right types of expected data."}
{"_id":{"$oid":"5a671a48f26229172b81fc3c"},"name":"Sensu","ring":"trial","quadrant":"tools","isNews":"TRUE","description":"Many monitoring tools are built around the concept of the machine or instance. The increasing use of patterns like \u003ca href=\"http://martinfowler.com/bliki/PhoenixServer.html\"\u003ePhoenix Server\u003c/a\u003e and tools like \u003ca href=\"https://www.docker.com/\"\u003eDocker\u003c/a\u003e mean this is an increasingly unhelpful way to model infrastructure: Instances are becoming transient while services are the things that persist. \u003ca href=\"https://sensuapp.org/\"\u003e\u003cstrong\u003eSensu\u003c/strong\u003e\u003c/a\u003e allows an instance to register itself as playing a particular role, and Sensu then monitors it on that basis. Over time, different instances playing that role may come and go. Given these factors and the increasing maturity of the tool, we felt it was time to bring Sensu back on to the radar."}
{"_id":{"$oid":"5a671a48f26229172b81fc3d"},"name":"SysDig","ring":"trial","quadrant":"tools","isNews":"TRUE","description":"Although \u003cstrong\u003e\u003ca href=\"http://www.sysdig.org/\"\u003eSysDig\u003c/a\u003e\u003c/strong\u003e isn�۪t the newest tool on the Technology Radar, we�۪re still surprised by how many people haven�۪t heard of it. A pluggable open source CLI for Linux system troubleshooting, SysDig has some pretty powerful features. One of the key things we like is the ability to generate a system trace on a machine that is experiencing difficulties, which you can then interrogate afterward to find out what was happening. SysDig also contains support for working with containers, something that makes a previously useful tool even more powerful."}
{"_id":{"$oid":"5a671a48f26229172b81fc3e"},"name":"ZAP","ring":"trial","quadrant":"tools","isNews":"FALSE","description":"The \u003cstrong\u003e\u003ca href=\"https://www.owasp.org/index.php/OWASP_Zed_Attack_Proxy_Project\"\u003eZED Attack Proxy (ZAP)\u003c/a\u003e\u003c/strong\u003e is a project from OWASP which allows you to probe an existing site for security vulnerabilities in an automated fashion. It can be used as part of periodic security testing, or else integrated into a CD pipeline to provide ongoing checks for common vulnerabilities. The use of a tool like ZAP doesn�۪t replace the need to think carefully about security and do other sorts of more thorough testing, but as another tool to help ensure our systems are more secure it�۪s a good addition to the toolbox."}
{"_id":{"$oid":"5a671a48f26229172b81fc3f"},"name":"Apache Kafka","ring":"assess","quadrant":"tools","isNews":"FALSE","description":"Many recent developments in enterprise software revolve around asynchronous sequences of immutable event sequences as opposed to synchronous, point-to-point requests that modify state. \u003ca href=\"http://kafka.apache.org/\"\u003e\u003cstrong\u003eApache\u003c/strong\u003e\u0026nbsp;\u003cstrong\u003eKafka\u003c/strong\u003e\u003c/a\u003e is an open-source messaging framework that supports this architectural style by publishing ordered message feeds to many independent, lightweight\u0026nbsp;consumers. Kafka�۪s unique design allows the number of consumers to scale while maintaining strong ordering on the messages."}
{"_id":{"$oid":"5a671a48f26229172b81fc40"},"name":"Concourse CI","ring":"assess","quadrant":"tools","isNews":"TRUE","description":"Many development teams are making the move from simple continuous integration servers to Continuous Delivery pipelines, often spanning multiple environments, reaching into production. To implement such a pipeline successfully and operate it in a sustainable way requires a CI/CD tool that treats build pipelines and artifacts as first-class citizens; and unfortunately there aren�۪t many. \u003ca href=\"http://concourse.ci/\"\u003e\u003cstrong\u003eConcourse CI\u003c/strong\u003e\u003c/a\u003e is a promising new entrant in this field, and our teams that have tried it are excited about its setup, which enables builds that run in containers, has a clean, usable UI and discourages snowflake build servers."}
{"_id":{"$oid":"5a671a48f26229172b81fc41"},"name":"Espresso","ring":"assess","quadrant":"tools","isNews":"TRUE","description":"\u003cstrong\u003e\u003ca href=\"https://google.github.io/android-testing-support-library/docs/espresso/index.html\"\u003eEspresso\u003c/a\u003e\u003c/strong\u003e is an Android functional-testing tool. Its small-core API hides the messy implementation details and helps in writing concise tests, with faster and reliable test execution."}
{"_id":{"$oid":"5a671a48f26229172b81fc42"},"name":"Gauge","ring":"assess","quadrant":"tools","isNews":"TRUE","description":"\u003cstrong\u003e\u003ca href=\"http://getgauge.io/\"\u003eGauge\u003c/a\u003e\u003c/strong\u003e is a lightweight cross-platform test-automation tool. Specifications are written in free-form Markdown, so test cases can be written in the business language and can be incorporated into any existing documentation format. Supported languages are implemented as plugins to a single core implementation, which ensures consistency across language implementations. This tool, open sourced by ThoughtWorks, also supports parallel execution out of the box for all supported platforms."}
{"_id":{"$oid":"5a671a48f26229172b81fc43"},"name":"Gor","ring":"assess","quadrant":"tools","isNews":"FALSE","description":"\u003ca href=\"https://github.com/buger/gor\"\u003e\u003cstrong\u003eGor\u003c/strong\u003e\u003c/a\u003e is an open-source tool for capturing and replaying live HTTP traffic into a test environment in order to continuously test your system with real data. It can be used to increase confidence in code deployments, configuration changes and infrastructure changes."}
{"_id":{"$oid":"5a671a48f26229172b81fc44"},"name":"ievms","ring":"assess","quadrant":"tools","isNews":"TRUE","description":"Despite the shrinking usage of Internet Explorer, for many products the IE user base is not an insignificant share of the market, and browser compatibility needs to be tested. This is particularly troublesome if you prefer the joys of a UNIX-based system for development. To aid in this dilemma, \u003ca href=\"https://github.com/xdissent/ievms\"\u003e\u003cstrong\u003eievms\u003c/strong\u003e\u003c/a\u003e provides a utility script that brings together Windows-distributed VM images and VirtualBox to automate the setup and testability of various IE versions, from 6 up to Edge."}
{"_id":{"$oid":"5a671a48f26229172b81fc45"},"name":"Let's Encrypt","ring":"assess","quadrant":"tools","isNews":"TRUE","description":"Although more sites every day are implementing HTTPS to help protect their own users and improve the integrity of the web as a whole, there are many more sites to go. In addition, we see more and more people using HTTPS within their enterprises, to provide additional security guarantees. One of the main blockers to wider adoption has been the process of getting a certificate in the first place. Aside from the cost, the process itself is far from slick. \u003ca href=\"https://letsencrypt.org/\"\u003e\u003cstrong\u003eLet�۪s Encrypt\u003c/strong\u003e\u003c/a\u003e, a new Certificate Authority, aims to solve all this. First, it provides certificates for free. Second, and arguably more important, it also provides an extremely easy-to-use command-line API, making it easy to fully automate the process of issuing, upgrading and installing certificates. We think that Let�۪s Encrypt, in beta at the moment, has the chance to be revolutionary in terms of helping more of the web get on to HTTPS, and at the same time showing what good, automatable tools for the security-conscious should look like."}
{"_id":{"$oid":"5a671a48f26229172b81fc46"},"name":"Pageify","ring":"assess","quadrant":"tools","isNews":"TRUE","description":"\u003cstrong\u003e\u003ca href=\"https://github.com/paramadeep/pageify\"\u003ePageify\u003c/a\u003e\u003c/strong\u003e is a Ruby library for building page objects for UI automation tests, focusing on faster test execution and code readability. It offers simple APIs to dynamically define, operate and assert on the page objects, allowing readable code even when handling elements with complex hierarchies in the DOM. It bundles integration for \u003cstrong\u003eWebDriver\u003c/strong\u003e and \u003cstrong\u003eCapybara\u003c/strong\u003e."}
{"_id":{"$oid":"5a671a48f26229172b81fc47"},"name":"Prometheus","ring":"assess","quadrant":"tools","isNews":"TRUE","description":"SoundCloud has recently open sourced its monitoring and alerting toolkit, \u003ca href=\"http://prometheus.io/\"\u003e\u003cstrong\u003ePrometheus\u003c/strong\u003e\u003c/a\u003e. Developed in reaction to difficulties with \u003ca href=\"http://graphite.readthedocs.org/\"\u003eGraphite\u003c/a\u003e in its production systems, Prometheus primarily supports a pull-based HTTP model (although a more Graphite-like push model is also supported). It also goes further by supporting alerts, making it an active part of your operational toolset. As of this writing, Prometheus is still only in release 0.15.1 but is evolving rapidly. We�۪re glad to see the recent product focus on core time-series DB and multidimensional indexing capabilities while allowing for export to a wider variety of front-end graphing tools."}
{"_id":{"$oid":"5a671a48f26229172b81fc48"},"name":"Quick","ring":"assess","quadrant":"tools","isNews":"FALSE","description":"\u003cstrong\u003e\u003ca href=\"https://github.com/Quick/Quick\"\u003eQuick\u003c/a\u003e\u003c/strong\u003e is a testing framework for Swift and Objective-C, which comes bundled with \u003cstrong\u003eNimble\u003c/strong\u003e, a matcher framework for tests. Quick helps verify the behavior of Swift and Objective-C programs. Quick has the same syntactic flavour as \u003cstrong\u003eRSpec\u003c/strong\u003e and \u003cstrong\u003eJasmine\u003c/strong\u003e and is easy to set up. It is very organized, allows for assertion of types and makes it easy to test asynchronous code."}
{"_id":{"$oid":"5a671a48f26229172b81fc49"},"name":"Visual Studio Code","ring":"assess","quadrant":"tools","isNews":"TRUE","description":"\u003cstrong\u003e\u003ca href=\"https://code.visualstudio.com/\"\u003eVisual Studio Code\u003c/a\u003e\u003c/strong\u003e is Microsoft�۪s free IDE editor, available across platforms. We find the version-control integration with Git very beneficial to promoting continuous integration practices. Visual Studio Code also provides a means of integrating with external tools via tasks, with autodetection of grunt/gulp tasks eliminating the need for running grunt/gulp tasks via terminals and simply using the editor. With the growth of the Docker ecosystem, this IDE offers support for the dockerfile with snippets and definitions of valid commands."}
{"_id":{"$oid":"5a671a48f26229172b81fc4a"},"name":"Citrix for development","ring":"hold","quadrant":"tools","isNews":true,"description":"Many organizations are still forcing distributed or offshore development teams to use \u003cstrong\u003eCitrix remote desktop for development\u003c/strong\u003e. Although this provides a simple security model ��� assets supposedly never leave the organization�۪s servers - using remote desktops for development absolutely cripples developer productivity. There�۪s not much point paying a cheaper hourly rate for developers if you�۪re going to impose both the distribution and remote-desktop burdens on them, and we wish more offshore vendors would admit these drawbacks to their clients. It�۪s much better to use either a 'clean room' secured offshore environment where local development can be done, or a Hosted IDE (e.g. \u003ca href=\"/radar/tools/ievms\"\u003eievms\u003c/a\u003e)"}
{"_id":{"$oid":"5a671a48f26229172b81fc4b"},"name":"Consumer-driven contract testing","ring":"hold","quadrant":"techniquesS","isNews":true,"description":"When two independently developed services are collaborating, changes to the supplier�۪s API can cause failures for all its consumers. Consuming services usually cannot test against live suppliers since such tests are slow and \u003ca href=\"http://martinfowler.com/articles/nonDeterminism.html#RemoteServices\"\u003ebrittle\u003c/a\u003e, so it�۪s best to use \u003ca href=\"http://martinfowler.com/bliki/TestDouble.html\"\u003eTest Doubles\u003c/a\u003e, leading to the danger that the test doubles get out of sync with the real supplier service. Consumer teams can protect themselves from these failures by using \u003ca href=\"http://martinfowler.com/bliki/IntegrationContractTest.html\"\u003eintegration contract tests\u003c/a\u003e ��� tests that compare actual service responses with test values. While such contract tests are valuable, they are even more useful when consuming services provide these tests to the supplier, who can then run all their consumers�۪ contract tests to determine if their changes are likely to cause problems ��� adopting \u003ca href=\"http://www.martinfowler.com/articles/consumerDrivenContracts.html\"\u003econsumer-driven contracts\u003c/a\u003e. Such \u003cstrong\u003econsumer-driven contract tests\u003c/strong\u003e are an essential part of a mature \u003ca href=\"http://martinfowler.com/articles/microservice-testing/\"\u003emicroservice testing\u003c/a\u003e portfolio."}
{"_id":{"$oid":"5a671a48f26229172b81fc4c"},"name":"Decoupling deployment from release","ring":"hold","quadrant":"techniquesS","isNews":true,"description":"Implementing \u003ca href=\"http://martinfowler.com/bliki/ContinuousDelivery.html\"\u003eContinuous Delivery\u003c/a\u003e continues to be a challenge for many organizations, and it remains important to highlight useful techniques such as \u003cstrong\u003edecoupling deployment from release\u003c/strong\u003e. We recommend strictly using the term \u003cem\u003eDeployment\u003c/em\u003e when referring to the act of deploying a change to application components or infrastructure. The term \u003cem\u003eRelease\u003c/em\u003e should be used when a feature change is released to end users, with a business impact. Using techniques such as feature toggles and dark launches, we can deploy changes to production systems more frequently without releasing features. More-frequent deployments reduce the risk associated with change, while business stakeholders retain control over when features are released to end users."}
{"_id":{"$oid":"5a671a48f26229172b81fc4d"},"name":"Generated infrastructure diagrams","ring":"adopt","quadrant":"techniquesS","isNews":"FALSE","description":"When we need a diagram that describes the current infrastructure or physical architecture we usually take to our favorite technical diagramming tool. If you are using the cloud or virtualization\u0026nbsp;technologies this no longer makes sense, we can use the provided APIs to interrogate the actual infrastructure and generate a live, \u003cstrong\u003eautomated infrastructure diagram\u003c/strong\u003e using simple tools like \u003ca href=\"http://www.graphviz.org/\"\u003eGraphViz\u003c/a\u003e or by outputting SVG."}
{"_id":{"$oid":"5a671a48f26229172b81fc4e"},"name":"NoPSD","ring":"adopt","quadrant":"techniquesS","isNews":"TRUE","description":"Just In Time Design' is an important and useful concept for visual design that the \u003ca href=\"https://www.thoughtworks.com/p2magazine/issue02/continuous-design/\"\u003e\u003cstrong\u003eNoPSD\u003c/strong\u003e\u003c/a\u003e movement attempts to capture. You don't need to design the whole application or every UI element up front. Design things as you need them with as lightweight tools as you can use. We have seen a corresponding growth in simpler tools with faster learning curves, such as \u003ca href=\"http://www.sketchapp.com/\"\u003e\u003cstrong\u003eSketch\u003c/strong\u003e\u003c/a\u003e, as well as an increasing return to pen-and-paper (especially when paired with an existing robust \u003ca href=\"https://www.thoughtworks.com/radar/techniques/living-css-style-guides\"\u003e\u003cstrong\u003edigital style guide\u003c/strong\u003e\u003c/a\u003e). Because of the limitations of flat mock-ups when you�۪re designing for screens, creating prototypes of varying fidelity with tools such as \u003ca href=\"http://www.invisionapp.com/\"\u003e\u003cstrong\u003eInvision\u003c/strong\u003e\u003c/a\u003e, \u003ca href=\"http://framerjs.com/\"\u003e\u003cstrong\u003eFramerJS\u003c/strong\u003e\u003c/a\u003e \u003ca href=\"https://www.thoughtworks.com/radar/tools/origami\"\u003e and \u003cstrong\u003eOrigami\u003c/strong\u003e\u003c/a\u003e - or simply HTML/CSS and a bit of JavaScript - has also become increasingly common and valuable for communicating design intent."}
{"_id":{"$oid":"5a671a48f26229172b81fc4f"},"name":"Security Monkey","ring":"assess","quadrant":"tools","isNews":"FALSE","description":"\u003cstrong\u003e\u003ca href=\"https://github.com/Netflix/security_monkey\"\u003eSecurity Monkey\u003c/a\u003e\u003c/strong\u003e is another tool in Netflix�۪s Simian Army, which is a suite of tools designed to ensure that systems are being built in a resilient fashion. As well as providing a (configurable) assessment of any potential security vulnerabilities in your AWS setup, it can also be used to monitor changes on an ongoing basis, alerting different groups as required. It does overlap in some ways with AWS�۪ own\u0026nbsp;\u003ca href=\"https://aws.amazon.com/premiumsupport/trustedadvisor/\"\u003eTrusted Advisor Report\u003c/a\u003e and \u003ca href=\"http://aws.amazon.com/cloudtrail/\"\u003eCloudTrail\u003c/a\u003e service, as it was developed prior to both these services being made generally available, but its capabilities do go beyond these offerings. If either of those services don�۪t quite meet your requirements, Security Monkey is worth a look."}
{"_id":{"$oid":"5a671a48f26229172b81fc50"},"name":"Threat Modelling","ring":"adopt","quadrant":"techniquesS","isNews":"TRUE","description":"With the number of high-profile security breaches in the past months, software development teams no longer need convincing that they must place an emphasis on writing secure software and dealing with their users�۪ data in a responsible way. The teams face a steep learning curve, though, and the vast number of potential threats - ranging from organized crime and government spying to teenagers who attack systems 'for the lulz' can be overwhelming. \u003ca href=\"https://www.owasp.org/index.php/Category:Threat_Modeling\"\u003e\u003cstrong\u003eThreat Modelling\u003c/strong\u003e\u003c/a\u003e provides a set of techniques, mostly from a defensive perspective, that help you understand and classify potential threats. Turned into 'evil-user stories', threat models can give a team a manageable and effective approach to making their systems more secure."}
{"_id":{"$oid":"5a671a48f26229172b81fc51"},"name":"BEM","ring":"trial","quadrant":"techniquesS","isNews":"TRUE","description":"Debugging CSS problems can be painful. How many times have you had to trawl through thousands of overridden styles to work out the source of your problem? This has led many of our teams to introduce various guidelines such as avoiding cascading and overrides, making styles opt-in and emphasizing thoughtful naming. \u003ca href=\"http://getbem.com/\"\u003e\u003cstrong\u003eBEM\u003c/strong\u003e\u003c/a\u003e is a simple CSS naming convention (standing for Block, Element, Modifier) that helps give semantic clarity and structure to your CSS. By using BEM, it becomes much easier to understand which\u0026nbsp;CSS rules are influencing the appearance of an element and, more importantly, the intent of those rules. This approach can be seen as moving the OO lesson of favoring composition over inheritance to the world of CSS."}
{"_id":{"$oid":"5a671a48f26229172b81fc52"},"name":"BFF - Backend for frontends","ring":"trial","quadrant":"techniquesS","isNews":"TRUE","description":"Valuable services support many variations in clients, such as mobile versus web and different forms of web interface. It�۪s tempting to design a single back-end API to support all clients with a reusable API. But client needs vary, as do constraints such as bandwidth for mobile devices versus the desire for lots of data on fast web connections. Consequently it�۪s often best to \u003cstrong\u003edefine different back-end services for each kind of front-end\u003c/strong\u003e client. These back ends should be developed by teams aligned with each front end to ensure that each back end properly meets the needs of its client."}
{"_id":{"$oid":"5a671a48f26229172b81fc53"},"name":"Docker for builds","ring":"trial","quadrant":"techniquesS","isNews":true,"description":"One of the many innovative uses of \u003ca href=\"https://www.docker.com/\"\u003eDocker\u003c/a\u003e that we�۪ve seen on our projects is a technique to manage build-time dependencies. In the past, it was common to run build agents on an OS, augmented with dependencies needed for the target build. But with Docker it is possible to run the compilation step in an isolated environment complete with dependencies without contaminating the build agent. This technique of using \u003cstrong\u003eDocker for builds\u003c/strong\u003e\u0026nbsp;has proven particularly useful for compiling Golang binaries, and the \u003ca href=\"https://github.com/CenturyLinkLabs/golang-builder\"\u003egolang-builder\u003c/a\u003e container is available for this very purpose."}
{"_id":{"$oid":"5a671a48f26229172b81fc54"},"name":"RAML","ring":"adopt","quadrant":"tools","isNews":false,"description":"With a growing landscape of services providing RESTful APIs, it is becoming increasingly important to document them. We have previously mentioned \u003ca href=\"https://www.thoughtworks.com/radar/tools/swagger\"\u003eSwagger\u003c/a\u003e, and in this Technology Radar we�۪d like to highlight the RESTful API modeling language (\u003ca href=\"http://raml.org/\"\u003e\u003cstrong\u003eRAML\u003c/strong\u003e\u003c/a\u003e). Our teams feel that in comparison to Swagger it is more lightweight and moves the focus from adding documentation to existing APIs to designing APIs."}
{"_id":{"$oid":"5a671a48f26229172b81fc55"},"name":"Sleepy Puppy","ring":"adopt","quadrant":"tools","isNews":false,"description":"\u003cstrong\u003e\u003ca href=\"https://github.com/Netflix/sleepy-puppy\"\u003eSleepy Puppy\u003c/a\u003e\u003c/strong\u003e is a delayed cross-site scripting (XSS) payload-management framework recently open sourced by Netflix. It enables you to test vulnerabilities for XSS past the target application when the perpetrator intends to attack a secondary underlying system. With XSS being one of the OWASP Top10, we see this framework assisting with automated security checks for several applications. It simplifies the capturing, managing and tracking of XSS propagation over long periods of time, with customizable payloads. Sleepy puppy also exposes an API that can be integrated with vulnerability tools like \u003ca href=\"https://www.thoughtworks.com/radar/tools/zap\"\u003eZAP\u003c/a\u003e, for automated security checks."}
{"_id":{"$oid":"5a671a48f26229172b81fc56"},"name":"Products over projects","ring":"assess","quadrant":"techniquesS","isNews":false,"description":"We�۪ve long been championing the idea that thinking of software development as a project - something budgeted and delivered during a limited time slot - doesn�۪t fit the needs of the modern business. Important software efforts need to be an ongoing product that supports and rethinks the business process it is supporting. Such efforts are not complete until the business process, and its software, cease to be useful. Our observation of this \u003cstrong\u003eproducts over projects\u003c/strong\u003e approach, both with our own projects and outside, makes us determine that it is the approach to use for all but exceptional cases."}
{"_id":{"$oid":"5a671a48f26229172b81fc57"},"name":"Event Storming","ring":"assess","quadrant":"techniquesS","isNews":true,"description":"\u003ca href=\"http://ziobrando.blogspot.be/2013/11/introducing-event-storming.html\"\u003e\u003cstrong\u003eEvent Storming\u003c/strong\u003e\u003c/a\u003e is a useful way to do rapid ���outside-in�۝ domain modeling: starting with the events that occur in the domain rather than a static data model. Run as a facilitated workshop, it focuses on discovering key domain events, placing them along a timeline, identifying their triggers and then exploring their relationships. This approach is particularly useful for people taking a CQRS or \u003ca href=\"https://www.thoughtworks.com/radar/techniques/event-sourcing\"\u003eEvent Sourcing\u003c/a\u003e approach. Getting the right people in the room is important - a blend of business and technical people who bring both the questions and the answers. Ensuring that you have enough wall space for modeling is the second key to success. Look to discover the big picture, with the goal of collectively understanding the domain in all of its complexity, before diving into solutions."}
{"_id":{"$oid":"5a671a48f26229172b81fc58"},"name":"Flux","ring":"trial","quadrant":"techniques","isNews":"TRUE","description":"\u003ca href=\"https://facebook.github.io/flux/\"\u003e\u003cstrong\u003eFlux\u003c/strong\u003e\u003c/a\u003e is an application architecture introduced by Facebook. Usually mentioned in conjunction with \u003cstrong\u003eReact.js\u003c/strong\u003e, Flux is based on a one-way flow of data up through the rendering pipeline. Flux embraces the modern web landscape of client-side JavaScript applications in a way that avoids the venerable MV* clich̩s. ThoughtWorks teams are now starting to gain some experience with this architectural style and find that it meshes well with service orientation and solves some of the problems inherent in two-way data binding."}
{"_id":{"$oid":"5a671a48f26229172b81fc59"},"name":"Idempotency filter","ring":"trial","quadrant":"techniques","isNews":"TRUE","description":"Many services, especially legacy services, are written with the assumption that any request will occur only once. Networks being what they are, this can be difficult to arrange. An \u003cstrong\u003eidempotency filter\u003c/strong\u003e is a simple component that merely checks for duplicate requests and ensures that they are sent to the supplier service only once. Such a filter should do only this one task and be used as a decorator over existing service calls."}
{"_id":{"$oid":"5a671a48f26229172b81fc5a"},"name":"iFrames for sandboxing","ring":"trial","quadrant":"techniques","isNews":"TRUE","description":"Modern web pages tend to contain a plethora of JavaScript widgets and snippets coming from a variety of third-party sources. This can have a negative impact on both security and performance. While we are still waiting for fuller JavaScript isolation with web components, our teams have benefited from using HTML5 \u003ca href=\"http://www.html5rocks.com/en/tutorials/security/sandboxed-iframes/\"\u003e\u003cstrong\u003eiFrames for sandboxing\u003c/strong\u003e\u003c/a\u003e untrusted JavaScript."}
{"_id":{"$oid":"5a671a48f26229172b81fc5b"},"name":"Offline first web applications","ring":"trial","quadrant":"techniques","isNews":"FALSE","description":"\u003cstrong\u003eOffline first\u0026nbsp;web applications\u003c/strong\u003e provide the ability to design web applications for offline access by employing caching and updating mechanisms. The implementation requires a flag in the DOM to check whether the accessing device is offline or online, accessing local storage when offline, and synchronising data when online. All the major browsers now support an offline mode, with the local information accessible by specifying a manifest attribute in the html, which bootstraps the process of downloading and caching the resources such as HTML, CSS, JavaScript, images and other kinds of resources. There are some tools\u0026nbsp;which help simplify offline first implementation\u0026nbsp;such as \u003ca href=\"http://hood.ie/\"\u003e\u003cstrong\u003eHoodie\u003c/strong\u003e\u003c/a\u003e, and \u003ca href=\"http://couchdb.apache.org/\"\u003e\u003cstrong\u003eCouchDB\u003c/strong\u003e\u003c/a\u003e also offers ability to work with a locally deployed application on a local data storage."}
{"_id":{"$oid":"5a671a48f26229172b81fc5c"},"name":"Accumulate-only data","ring":"assess","quadrant":"techniques","isNews":"TRUE","description":"Immutable data structures are becoming more popular, with functional languages such as Clojure and Scala providing immutability by default. Immutability allows code to be more easily written, read and reasoned about. Using an \u003cstrong\u003eaccumulate-only data store\u003c/strong\u003e can confer some of these benefits in the database layer, as well as make audit and historical querying simple. Implementation options vary, from specific accumulative data stores such as \u003ca href=\"http://www.datomic.com/\"\u003eDatomic\u003c/a\u003e to simply using an ���append-don�۪t-update�۝ approach with a traditional database. \u003cstrong\u003eAccumulate-only\u003c/strong\u003e is a design strategy whereby data is removed via retraction rather than update; \u003cstrong\u003eappend-only\u003c/strong\u003e is an implementation technique."}
{"_id":{"$oid":"5a671a48f26229172b81fc5d"},"name":"Bug bounties","ring":"assess","quadrant":"techniques","isNews":"TRUE","description":"More and more organizations are starting to use \u003cstrong\u003ebug bounties \u003c/strong\u003eto encourage reporting of what are often security-related bugs, and in general help improve the quality of their software. To support these programs, companies like \u003ca href=\"https://hackerone.com/\"\u003eHackerOne\u003c/a\u003e and \u003ca href=\"https://bugcrowd.com/\"\u003eBugCrowd\u003c/a\u003e can help organizations manage this process more easily. We have limited experience with these offerings ourselves, but we like the idea of encouraging people to help come forward and highlight what can often be damaging vulnerabilities in an open and transparent way. It's worth noting that there might be some legal issues with encouraging users to find vulnerabilities in your software, so please do check that out first."}
{"_id":{"$oid":"5a671a48f26229172b81fc5e"},"name":"Data Lake","ring":"assess","quadrant":"techniques","isNews":"TRUE","description":"A\u003cstrong\u003e \u003ca href=\"http://martinfowler.com/bliki/DataLake.html\"\u003eData Lake\u003c/a\u003e\u003c/strong\u003e is an immutable data store of largely unprocessed 'raw' data, acting as a source for data analytics. Whereas the more familiar Data Warehouse filters and processes the data before storing it, the lake just captures the raw data, leaving it to the users of that data to carry out the particular analysis that they need. Examples include HDFS or HBase within a \u003ca href=\"https://hadoop.apache.org/\"\u003eHadoop\u003c/a\u003e, \u003ca href=\"http://spark.apache.org/\"\u003eSpark\u003c/a\u003e or \u003ca href=\"https://storm.apache.org/\"\u003eStorm\u003c/a\u003e processing framework. Usually only a small group of data scientists work on the raw data, developing streams of processed data into lakeshore data marts for most users to query. A Data Lake should only be used for analytics and reporting. For collaboration between operational systems we prefer using services designed for that purpose."}
{"_id":{"$oid":"5a671a48f26229172b81fc5f"},"name":"NPM for all the things","ring":"trial","quadrant":"techniques2","isNews":false,"description":"The JavaScript world has a plethora of dependency\u0026nbsp;and package-management tools, all of which rely on the Node Package Manager (NPM). Teams are starting to see these extra tools as redundant and are recommending that if you can use solely NPM for package and dependency management, you should. The simplification of using \u003cstrong\u003eNPM for all the things\u003c/strong\u003e helps reduce some of the churn in the JavaScript tools space."}
{"_id":{"$oid":"5a671a48f26229172b81fc60"},"name":"Phoenix Environments","ring":"trial","quadrant":"techniques2","isNews":false,"description":"The time taken to provision and update environments continues to be a significant bottleneck on many software projects. Phoenix Environments can help with this delay by extending the idea of \u003ca href=\"http://martinfowler.com/bliki/PhoenixServer.html\"\u003ePhoenix Servers\u003c/a\u003e to cover entire environments. We feel this is such a valuable and time-saving technique that you should consider trialing this approach. Using automation, we can create whole environments - including network configuration, load balancing and firewall ports - for example by using \u003ca href=\"https://aws.amazon.com/cloudformation/\"\u003e\u003cstrong\u003eCloudFormation\u003c/strong\u003e\u003c/a\u003e in AWS. We can then prove that the process works by tearing the environments down and recreating them from scratch on a regular basis. \u003cstrong\u003ePhoenix Environments\u003c/strong\u003e can support provisioning new environments for testing, development, UAT and disaster recovery. As with Phoenix Servers, this pattern is not always applicable, and we need to think carefully about things like state and dependencies. Treating the whole environment as a \u003ca href=\"http://martinfowler.com/bliki/BlueGreenDeployment.html\"\u003eblue/green deployment\u003c/a\u003e can be one approach when environment reconfiguration needs to be done."}
{"_id":{"$oid":"5a671a48f26229172b81fc61"},"name":"QA in production","ring":"trial","quadrant":"techniques","isNews":"TRUE","description":"Traditionally, QA roles have focused on assessing the quality of a software product in a pre-production environment. With the rise of Continuous Delivery, the QA\u0026nbsp;role is shifting to include analyzing software product quality in production. This involves monitoring of the production systems, coming up with alert conditions to detect urgent errors, determining ongoing quality issues and figuring out what measurements you can use in the production environment to make this work. While there is a danger that some organizations will go too far and neglect pre-production QA, our experience shows that \u003cstrong\u003eQA in production\u003c/strong\u003e is a valuable tool for organizations that have already progressed to a reasonable degree of Continuous Delivery."}
{"_id":{"$oid":"5a671a48f26229172b81fc62"},"name":"Hosted IDE's","ring":"assess","quadrant":"techniques","isNews":"TRUE","description":"Many organizations want to leverage distributed or offshore development but have security concerns with their code and other intellectual property sitting outside their control. The result is often to use high-latency remote-desktop solutions for development, adhering to an organization�۪s security controls but crippling developer productivity. An alternative is to use a \u003cstrong\u003eHosted IDE\u003c/strong\u003e delivered to a browser via VPN. The IDE, code and build environment are hosted within the organization's private cloud, easing security concerns, and the developer experience is significantly improved. Tools in this space include \u003ca href=\"https://orionhub.org/\"\u003eOrion\u003c/a\u003e and \u003ca href=\"http://www.eclipse.org/che/\"\u003eChe\u003c/a\u003e from the Eclipse Foundation, \u003ca href=\"https://c9.io/\"\u003eCloud9\u003c/a\u003e and \u003ca href=\"https://codenvy.com/\"\u003eCode Envy\u003c/a\u003e."}
{"_id":{"$oid":"5a671a48f26229172b81fc63"},"name":"Reactive Architectures","ring":"assess","quadrant":"techniques2","isNews":false,"description":"The techniques of functional reactive programming have steadily gained in popularity over recent years, and we�۪re seeing increased interest in extending this concept to distributed systems architectures. Partly inspired by ���\u003ca href=\"http://www.reactivemanifesto.org/\"\u003eThe Reactive Manifesto\u003c/a\u003e�۝, these \u003cstrong\u003ereactive architectures\u003c/strong\u003e are based on a one-way, asynchronous flow of immutable events through a network of independent processes (perhaps implemented as microservices). In the right setting, these systems are scalable and resilient and decrease the coupling between individual processing units. However, architectures based entirely on asynchronous message passing introduce complexity and often rely on proprietary frameworks. We recommend assessing the performance and scalability needs of your system before committing to this as a default architectural style."}
{"_id":{"$oid":"5a671a48f26229172b81fc64"},"name":"Microservice envy","ring":"hold","quadrant":"techniques","isNews":"FALSE","description":"We remain convinced that microservices can offer significant advantages to organizations, in terms of improving team autonomy and faster frequency of change. The additional complexity that comes from distributed systems requires an additional level of maturity and investment. We are concerned that some teams are rushing in to adopting microservices without understanding the changes to development, test, and operations that are required to do them well. Our general advice remains simple. Avoid \u003cstrong\u003emicroservice envy\u003c/strong\u003e\u0026nbsp;and start with one or two services before rushing headlong into developing more, to allow your teams time to adjust and understand the right level of granularity."}
{"_id":{"$oid":"5a671a48f26229172b81fc65"},"name":"Pace-layered Application Strategy","ring":"hold","quadrant":"techniques","isNews":"TRUE","description":"Gartner's \u003cstrong\u003ePace-layered Application Strategy\u003c/strong\u003e approach appears to be creating an unhelpful focus on the idea of layers within an architecture. We find thinking about the pace of change within different \u003cstrong\u003ebusiness capabilities\u003c/strong\u003e (which can be made up of several architectural layers) to be a more useful concept. The danger in focusing on layers is that many types of change cut across multiple layers. For example, being able to add new class of stock to a website is not just about having an easy-to-change CMS; you also need to update the database, integration points, warehouse systems, etc. The recognition that some parts of an architecture need to be more maneuverable than others is useful. However, a focus on layers is proving unhelpful."}
{"_id":{"$oid":"5a671a48f26229172b81fc66"},"name":"Programming in your CI/CD tool","ring":"hold","quadrant":"techniques","isNews":"FALSE","description":"We still see teams configure their CI and CD tools by directly embedding complex multi-line commands directly into the configuration of the tool. Often these embedded commands also contains steps that would only ever take effect in the build environment including things such as CI specific environment variables, steps that would create/modify files and templates only in the CI environment etc. This makes the build environment a special beast - whose results cannot be duplicated locally on a developer's machine."}
{"_id":{"$oid":"5a671a48f26229172b81fc67"},"name":"SAFe��","ring":"hold","quadrant":"techniques2","isNews":false,"description":"The \u003ca href=\"http://www.scaledagileframework.com/\"\u003eScaled Agile Framework�\u003c/a\u003e (aka\u0026nbsp;\u003cstrong\u003eSAFe��\u003c/strong\u003e) continues to gain mindshare in many organizations at scale. In addition, tools and certification are becoming a significant aspect of the adoption of SAFe��. We continue to be concerned that actual adoptions are prone to over-standardization and\u0026nbsp;are tending towards large release practices, resulting in practices that hinder agile adoption. In its place, we continue to recommend lean approaches that include experimentation and incorporate continuous improvement practices like the Improvement Katas offer organizations a better model for scaling agile."}
{"_id":{"$oid":"5a671a48f26229172b81fc68"},"name":"Monitoring of invariants","ring":"assess","quadrant":"techniques","isNews":"TRUE","description":"In monitoring, the common approach is to conceive of erroneous conditions and set alerts when these appear. But it�۪s often difficult to enumerate the myriad failure modes in a software system. \u003cstrong\u003eMonitoring of invariants\u003c/strong\u003e is a complementary approach to setting expected normal ranges, often by examining historical behavior, and alerting whenever a system goes outside those bounds."}
{"_id":{"$oid":"5a671a48f26229172b81fc69"},"name":"TOTP Two-Factor Authentication","ring":"adopt","quadrant":"platforms","isNews":"TRUE","description":"Password security is still a hotly debated topic with the \u003ca href=\"https://www.gov.uk/government/publications/password-policy-simplifying-your-approach/password-policy-executive-summary\"\u003eUK government advocating technical controls\u003c/a\u003e that let users remember simpler passwords and \u003ca href=\"https://www.youtube.com/watch?v=yzGzB-yYKcc\"\u003eEdward Snowden�۪s password advice\u003c/a\u003e being described as only '\u003ca href=\"http://www.wired.com/2015/04/snowden-sexy-margaret-thatcher-password-isnt-so-sexy/\"\u003eborderline secure\u003c/a\u003e'. Passwords are generally one of the weakest links in the security chain, so we recommend employing \u003cstrong\u003etwo-factor authentication\u003c/strong\u003e, which can significantly improve security. \u003ca href=\"http://en.wikipedia.org/wiki/Time-based_One-time_Password_Algorithm\"\u003eTime-based One-Time Password\u003c/a\u003e (\u003cstrong\u003eTOTP\u003c/strong\u003e) is the standard algorithm in this space, with straightforward server-side implementations and free smartphone authenticator apps from \u003ca href=\"https://play.google.com/store/apps/details?id=com.google.android.apps.authenticator2\"\u003eGoogle\u003c/a\u003e and \u003ca href=\"http://www.windowsphone.com/en-us/store/app/authenticator/e7994dbc-2336-4950-91ba-ca22d653759b\"\u003eMicrosoft\u003c/a\u003e."}
{"_id":{"$oid":"5a671a48f26229172b81fc6a"},"name":"Apache Mesos","ring":"trial","quadrant":"platforms","isNews":"TRUE","description":"\u003cstrong\u003e\u003ca href=\"http://mesos.apache.org/\"\u003eMesos\u003c/a\u003e\u003c/strong\u003e is a platform that abstracts out underlying computing resources to make it easier to build massively scalable distributed systems. It can be used to provide a scheduling layer for \u003ca href=\"https://www.docker.com/\"\u003eDocker\u003c/a\u003e, or to act as an abstraction layer to things like AWS. Twitter has used it to great effect to help it scale its infrastructure. Tools built on top of Mesos are starting to appear, such as \u003ca href=\"http://nerds.airbnb.com/introducing-chronos/\"\u003eChronos\u003c/a\u003e, which is a distributed, fault-tolerant cron replacement. Prominent success stories are appearing, such as \u003ca href=\"https://mesosphere.com/blog/2015/04/23/apple-details-j-a-r-v-i-s-the-mesos-framework-that-runs-siri/\"\u003eApple's Siri\u003c/a\u003e rearchitecting to use Mesos."}
{"_id":{"$oid":"5a671a48f26229172b81fc6b"},"name":"High performance envy/web scale envy","ring":"hold","quadrant":"techniques2","isNews":false,"description":"We see many teams run into trouble because they have chosen complex tools, frameworks or architectures because they 'might need to scale'. Companies such as Twitter and Netflix need to be able to support extreme loads and so need these architectures, but they also have extremely skilled development teams able to handle the complexity. Most situations do not require these kinds of engineering feats; teams should keep their\u0026nbsp;\u003cstrong\u003eweb scale envy\u003c/strong\u003e in check in favor of simpler solutions that still get the job done."}
{"_id":{"$oid":"5a671a48f26229172b81fc6c"},"name":"Gitflow","ring":"hold","quadrant":"techniques2","isNews":false,"description":"We firmly believe that long-lived version-control branches harm valuable engineering practices such as continuous integration, and this belief underlies our dislike for \u003cstrong\u003eGitflow\u003c/strong\u003e. We love the flexibility of \u003ca href=\"https://git-scm.com\"\u003eGit\u003c/a\u003e underneath but abhor tools that encourage bad engineering practices. Very short-lived branches hurt less, but most teams we see using Gitflow feel empowered to abuse its branch-heavy workflow, which encourages late integration (therefore discouraging true continuous integration)."}
{"_id":{"$oid":"5a671a48f26229172b81fc6d"},"name":"Separate DevOps team","ring":"adopt","quadrant":"techniques2","isNews":false,"description":"In the last radar issue we advised against creating a \u003cstrong\u003eseparate DevOps team\u003c/strong\u003e, as DevOps is about creating a culture of shared responsibility in delivery teams. We recommend embedding operations skills into delivery teams to reduce friction and deliver better outcomes. However where there is a need for significant investment in tooling and automation, we do see a role for a Delivery Engineering team. \u0026nbsp;Rather than being a helpdesk, these teams\u0026nbsp;build tooling and enable teams to deploy, monitor, and maintain\u0026nbsp;their own production environments. \u0026nbsp;"}
{"_id":{"$oid":"5a671a48f26229172b81fc6e"},"name":"Apache Spark","ring":"trial","quadrant":"platforms","isNews":"FALSE","description":"\u003ca href=\"https://spark.apache.org/\"\u003e\u003cstrong\u003eApache Spark\u003c/strong\u003e\u003c/a\u003e has been steadily gaining ground as a fast and general engine for large-scale data processing.\u0026nbsp;The engine\u0026nbsp;is\u0026nbsp;written in Scala and is well suited for applications that reuse a working set of data across multiple parallel operations. It�۪s designed to work as a standalone cluster or as part of Hadoop YARN cluster. It can access data from sources such as HDFS, Cassandra, S3 etc.\u0026nbsp;Spark also\u0026nbsp;offers many higher level operators in order to ease the development of data parallel applications.\u0026nbsp;As a generic data processing platform it has enabled development of many higher level tools such as interactive SQL (Spark SQL), real time streaming (Spark Streaming), machine learning library (MLib), R-on-Spark etc.\u0026nbsp;"}
{"_id":{"$oid":"5a671a48f26229172b81fc6f"},"name":"AWS Lambda","ring":"trial","quadrant":"platforms","isNews":"TRUE","description":"AWS releases a huge number of new features on what seems like a monthly basis, so it can sometimes be hard for any new service offering to rise above the noise, but \u003cstrong\u003e\u003ca href=\"https://aws.amazon.com/lambda/\"\u003eLambda\u003c/a\u003e\u003c/strong\u003e certainly manages to attract notice. Initially just supporting JavaScript, but now adding support for JVM-based applications (with more no doubt to follow), Lambda allows you to fire up very short-lived processes either in reaction to an event, or via a call from the related \u003ca href=\"https://aws.amazon.com/api-gateway/\"\u003eAPI Gateway\u003c/a\u003e. For stateless services, this means you don�۪t need to worry about running any long-lived machines, potentially reducing costs and improving security. Despite other forays into the PaaS space by AWS, Lambda looks the closest to getting this right."}
{"_id":{"$oid":"5a671a48f26229172b81fc70"},"name":"Cloudera Impala","ring":"trial","quadrant":"platforms","isNews":"FALSE","description":"For a while now the Hadoop community has been trying to bring low-latency, interactive SQL capability to the Hadoop platform\u0026nbsp;(better known as SQL-on-Hadoop). This has led to a few open\u0026nbsp;source systems such as Cloudera Impala, Apache Drill, Facebook�۪s Presto etc being developed actively through 2014. We think the\u0026nbsp;SQL-on-Hadoop\u0026nbsp;trend\u0026nbsp;signals an\u0026nbsp;important shift as\u0026nbsp;it\u0026nbsp;changes\u0026nbsp;Hadoop's proposition from being a batch oriented\u0026nbsp;technology that was\u0026nbsp;complementary to databases into something that could compete with them. \u0026nbsp;\u003ca href=\"http://www.cloudera.com/content/cloudera/en/products-and-services/cdh/impala.html\"\u003e\u003cstrong\u003eCloudera Impala\u003c/strong\u003e\u003c/a\u003e was one of the first SQL-on-Hadoop platforms. It\u0026nbsp;is a distributed, massively-parallel, C++ based query engine. The core component of this platform is the Impala daemon that coordinates the execution of the SQL query across one or more nodes of the Impala cluster.\u0026nbsp;Impala is designed to read data from files stored on HDFS in all popular file formats.\u0026nbsp;It leverages Hive's metadata catalog, in order to share databases and tables between the two database platforms.\u0026nbsp;Impala comes with a shell as well as JDBC and ODBC drivers for applications to use.\u0026nbsp;"}
{"_id":{"$oid":"5a671a48f26229172b81fc71"},"name":"H2O","ring":"trial","quadrant":"platforms","isNews":"TRUE","description":"Predictive analytics are used in more and more products, often directly in end user-facing functionality. \u003ca href=\"http://h2o.ai/\"\u003e\u003cstrong\u003eH2O\u003c/strong\u003e\u003c/a\u003e is an interesting open source package (with a startup behind it) that makes predictive analytics accessible to development teams, offering straightforward use of a wide variety of analytics, great performance and easy integration on JVM-based platforms. At the same time it integrates with the data scientists�۪ favorite tools, R and Python, as well as Hadoop and Spark."}
{"_id":{"$oid":"5a671a48f26229172b81fc72"},"name":"AWS ECS","ring":"assess","quadrant":"platforms","isNews":"TRUE","description":"The \u003cstrong\u003e\u003ca href=\"http://docs.aws.amazon.com/AmazonECS/latest/developerguide/Welcome.html\"\u003eElastic Container Service (ECS)\u003c/a\u003e\u003c/strong\u003e is AWS�۪ entry into the multihost Docker space. Although there is a lot of competition in this area, there aren�۪t many off-premises managed solutions out there yet. Although ECS seems like a good first step, we are worried that it is overly complicated at the moment and lacks a good abstraction layer. If you want to run \u003ca href=\"https://www.docker.com/\"\u003eDocker\u003c/a\u003e on AWS, though, this tool should certainly be high on your list. Just don�۪t expect it to be easy to get started with."}
{"_id":{"$oid":"5a671a48f26229172b81fc73"},"name":"Fastly","ring":"trial","quadrant":"platforms","isNews":"TRUE","description":"\u003cstrong\u003e\u003ca href=\"https://www.fastly.com/\"\u003eFastly\u003c/a\u003e\u003c/strong\u003e, one of a number of CDNs on the market, has a large and growing following on ThoughtWorks projects and is used by many web-scale household names, such as GitHub and Twitter. Its feature set, speed and price point combine to make it a very attractive option when you�۪re looking for an edge caching solution. We have also seen significant cost savings on projects that move to this platform from another CDN. If you are in the market for a CDN,  you could do worse than investigate this one."}
{"_id":{"$oid":"5a671a48f26229172b81fc74"},"name":"HSTS","ring":"trial","quadrant":"platforms","isNews":"TRUE","description":"\u003ca href=\"https://www.owasp.org/index.php/HTTP_Strict_Transport_Security\"\u003eHTTP Strict Transport Security\u003c/a\u003e (\u003cstrong\u003eHSTS\u003c/strong\u003e) is a now widely supported policy that allows websites to protect themselves from downgrade attacks. A downgrade attack in the context of HTTPS is one that can cause users of your site to fall back to HTTP rather than HTTPS, allowing for further attacks such as man-in-the-middle attacks. By using the server header, you inform browsers that they should only use HTTPS to access your website, and should ignore downgrade attempts to contact the site via HTTP. Browser support is now widespread enough that this easy-to-implement feature should be considered for any site using HTTPS."}
{"_id":{"$oid":"5a671a48f26229172b81fc75"},"name":"Apache Kylin","ring":"assess","quadrant":"platforms","isNews":"FALSE","description":"\u003ca href=\"http://www.kylin.io/\"\u003e\u003cstrong\u003eApache Kylin\u003c/strong\u003e\u003c/a\u003e is an open source analytics solution from eBay Inc. that enables SQL based\u0026nbsp;multidimensional analysis (OLAP)\u0026nbsp;on very large datasets. Kylin is intended to be a Hadoop based hybrid OLAP (HOLAP)\u0026nbsp;solution that will eventually support\u0026nbsp;both MOLAP and ROLAP style\u0026nbsp;multidimensional analysis.\u0026nbsp;With Kylin you can define cubes\u0026nbsp;using a Cube Designer and initiate an offline\u0026nbsp;process that builds these cubes. The offline process\u0026nbsp;performs a pre-join step to join facts and dimension tables into a flattened out structure. This is followed by a pre-aggregation phase where\u0026nbsp;individual cuboids are built using Map Reduce jobs. The results are stored in HDFS sequence files and are later loaded into HBase.\u0026nbsp;The data requests can originate from SQL submitted using a SQL-based tool. The query engine (based on \u003cstrong\u003eApache Calcite\u003c/strong\u003e), determines if the target dataset exists in HBase. If so, the engine directly accesses the target data from HBase and returns the result with sub-second latency. If not, the engine routes the queries to \u003cstrong\u003eHive\u003c/strong\u003e (or any other SQL on Hadoop solution enabled on the cluster)."}
{"_id":{"$oid":"5a671a48f26229172b81fc76"},"name":"CoreCLR and CoreFX","ring":"assess","quadrant":"platforms","isNews":"FALSE","description":"\u003cstrong\u003e\u003ca href=\"https://github.com/dotnet/coreclr\"\u003eCoreCLR\u003c/a\u003e \u003c/strong\u003eand\u003cstrong\u003e\u0026nbsp;\u003ca href=\"https://github.com/dotnet/corefx\"\u003eCoreFX\u003c/a\u003e\u003c/strong\u003e\u0026nbsp;is the core platform and framework for .NET. Although not new,\u0026nbsp;they\u0026nbsp;have\u0026nbsp;recently been open sourced by Microsoft.\u0026nbsp;A key change is that these dependencies are bin-deployable, they do not need to be installed on a machine in advance.\u0026nbsp; This eases side-by-side deployments, allowing applications to use different framework versions without conflicts. Something written in .NET is then an\u0026nbsp;implementation detail,\u0026nbsp;you can install a .NET dependency into any environment. A .NET tool is no different than something written in C from an external dependency perspective, making it a much more attractive option for general purpose applications and utilities. CoreFX is also being factored into individual NuGet dependencies, so that applications can pull what they need, keeping\u0026nbsp;the footprint for .NET applications and libraries small and making\u0026nbsp;it easier to replace part of the framework."}
{"_id":{"$oid":"5a671a48f26229172b81fc77"},"name":"Linux security modules","ring":"assess","quadrant":"platforms","isNews":"FALSE","description":"While server hardening is an old technique that is considered fairly commonplace by sysadmins who have had to manage production systems, it has not become commonplace among the developer community. However, the rise in the DevOps culture has resulted in renewed focus on tools like SELinux, AppArmor and Grsecurity that aim to make this simpler, at least on the Linux ecosystem. Each of these tools comes with their own strengths and weaknesses and it is\u0026nbsp;currently hard to pick one as being the only one you will need. That said, we highly recommend that all teams at least assess which \u003cstrong\u003eLinux security modules\u003c/strong\u003e would be the right one for them and make security and server hardening a part of their development workflow."}
{"_id":{"$oid":"5a671a48f26229172b81fc78"},"name":"Mesosphere DCOS","ring":"assess","quadrant":"platforms","isNews":"TRUE","description":"\u003cstrong\u003e\u003ca href=\"https://mesosphere.com/product/\"\u003eMesosphere DCOS\u003c/a\u003e\u003c/strong\u003e is a platform built on top of \u003ca href=\"http://mesos.apache.org/\"\u003eMesos\u003c/a\u003e. It provides an abstraction over underling machines, giving you a pool of storage and compute that allows services built for DCOS to operate at massive scale\u0026nbsp;(Support is already there for Hadoop, Spark and Cassandra, among others). This is probably overkill for more modest workloads at the moment (where plain old Mesos could still be a good fit), but it will be interesting to see if Mesosphere starts trying to position DCOS as a general-purpose system."}
{"_id":{"$oid":"5a671a48f26229172b81fc79"},"name":"Ceph","ring":"assess","quadrant":"platforms","isNews":"TRUE","description":"\u003cstrong\u003e\u003ca href=\"http://ceph.com/\"\u003eCeph\u003c/a\u003e\u003c/strong\u003e is a storage platform that can be used as object storage, as block storage, and as a file system, typically running on a cluster of commodity servers. With its first major release having been in July 2012, Ceph is certainly not a new product. We do want to highlight it on this Technology Radar as an important building block for private clouds. It is particularly attractive because its RADOS Gateway component can expose the object store through a RESTful interface that is compatible with \u003ca href=\"https://aws.amazon.com/s3/\"\u003eAmazon S3\u003c/a\u003e and the \u003ca href=\"https://wiki.openstack.org/wiki/Swift\"\u003eOpenStack Swift APIs\u003c/a\u003e."}
{"_id":{"$oid":"5a671a48f26229172b81fc7a"},"name":"Particle Photon/Particle Electron","ring":"assess","quadrant":"platforms","isNews":"FALSE","description":"\u003cstrong\u003e\u003ca href=\"https://www.particle.io/\"\u003eParticle\u003c/a\u003e\u003c/strong\u003e(formally Spark.io) is a full stack solution for cloud connected devices. \u003cstrong\u003eParticle Photon\u003c/strong\u003e is a microcontroller with\u0026nbsp;wifi module. \u003cstrong\u003eParticle Electron\u003c/strong\u003e is a variant that connects to a cellular network.\u0026nbsp;Particle OS adds\u0026nbsp;REST API to the devices. This simplifies the entry to IoT and building your own connected devices."}
{"_id":{"$oid":"5a671a48f26229172b81fc7b"},"name":"Deis","ring":"assess","quadrant":"platforms","isNews":"FALSE","description":"Heroku, with its 12-factor application model, has changed the way we think about building, deploying, and hosting web applications. \u0026nbsp;\u003ca href=\"http://deis.io/\"\u003e\u003cstrong\u003eDeis\u003c/strong\u003e\u003c/a\u003e encapsulates the Heroku PaaS model in an open-source framework that deploys onto Docker containers hosted anywhere. \u0026nbsp;Deis is still evolving, but for applications that fit the 12-factor model it has the potential to greatly simplify deployment and hosting in the environment of your choice. \u0026nbsp;Deis is yet\u0026nbsp;another example of the rich ecosystem of platforms and tools emerging around Docker."}
{"_id":{"$oid":"5a671a48f26229172b81fc7c"},"name":"Kubernetes","ring":"assess","quadrant":"platforms","isNews":"TRUE","description":"\u003cstrong\u003e\u003ca href=\"http://kubernetes.io/\"\u003eKubernetes\u003c/a\u003e\u003c/strong\u003e is Google's answer to the problem of deploying containers into a cluster of machines, which is becoming an increasingly common scenario. It is not the solution used by Google internally but an open source project that originated at Google and has seen a fair number of external contributions. \u003ca href=\"https://www.docker.com/\"\u003eDocker\u003c/a\u003e and \u003ca href=\"https://rocket.readthedocs.org/en/latest/\"\u003eRocket\u003c/a\u003e are supported as container formats, and services offered include health management, replication and discovery. A similar solution in this space is \u003ca href=\"/radar/platforms/rancher\"\u003eRancher\u003c/a\u003e."}
{"_id":{"$oid":"5a671a48f26229172b81fc7d"},"name":"Microsoft Nano Server","ring":"assess","quadrant":"platforms","isNews":"TRUE","description":"In contrast to modern cloud and container solutions based on Linux, even Windows Server Core is large and unwieldy. Microsoft is reacting and has provided the \u003ca href=\"http://www.theregister.co.uk/2015/05/15/wrestling_with_microsoft_nano_server_preview/?page=1\"\u003efirst previews\u003c/a\u003e of \u003ca href=\"https://msdn.microsoft.com/en-us/library/mt126167.aspx\"\u003e\u003cstrong\u003eNano Server\u003c/strong\u003e\u003c/a\u003e, a further-stripped-down version of Windows Server that drops the GUI stack, 32-bit Win32 support, local logins and remote desktop support, resulting in an on-disk size of about 400MB. The early previews are difficult to work with, and the final solution will be restricted to using the CoreCLR, but for companies that are interested in running .NET-based solutions, Nano Server is definitely worth a look at this stage."}
{"_id":{"$oid":"5a671a48f26229172b81fc7e"},"name":"Rancher","ring":"assess","quadrant":"platforms","isNews":"TRUE","description":"\u003cstrong\u003e\u003ca href=\"http://rancher.com/\"\u003eRancher\u003c/a\u003e\u003c/strong\u003e is an open source solution that allows deployment of containers into a cluster of machines, which is becoming an increasingly common scenario. It provides services such lifecycle management, monitoring, health checks and discovery. Also included is a completely containerized operating system based on \u003ca href=\"https://www.docker.com/\"\u003eDocker\u003c/a\u003e. The broad focus on containerization and very small footprint are key advantages for Rancher. A similar solution in this space is \u003ca href=\"/radar/platforms/kubernetes\"\u003eKubernetes\u003c/a\u003e."}
{"_id":{"$oid":"5a671a48f26229172b81fc7f"},"name":"Over-ambitious API Gateways","ring":"hold","quadrant":"platforms","isNews":"TRUE","description":"One of our common complaints is the pushing of business smarts into middleware, resulting in application servers and enterprise service buses with ambitions to run critical application logic. These require complex programming in environments not well suited to the purpose. We're seeing a worrying re-emergence of this disease with \u003cstrong\u003eoverambitious API Gateway\u003c/strong\u003e products. API Gateways can provide utility in dealing with some generic concerns - for example, authentication and rate-limiting - but any domain smarts such as data transformation or rule processing should live in applications or services where they can be controlled by product teams working closely with the domains they support."}
{"_id":{"$oid":"5a671a48f26229172b81fc80"},"name":"SPDY","ring":"hold","quadrant":"platforms","isNews":"FALSE","description":"The \u003cstrong\u003e\u003ca href=\"https://www.chromium.org/spdy/spdy-whitepaper\"\u003eSPDY\u003c/a\u003e\u003c/strong\u003e protocol was developed by Google from 2009 as an experiment to provide an alternative protocol to address performance shortcomings of HTTP/1.1. The new HTTP/2 standard protocol includes many of the key performance features of SPDY, and Google has announced it will drop browser SPDY support in early 2016. If your application requires the features of SPDY, we recommend you look instead at HTTP/2."}
{"_id":{"$oid":"5a671a48f26229172b81fc81"},"name":"Superficial private cloud","ring":"hold","quadrant":"platforms","isNews":"TRUE","description":"We've seen the indisputable productivity gains that come from deployment of applications and services into mature cloud providers. Much of that gain comes from the ability of teams to deploy and operate their own services with a high degree of autonomy and responsibility. We are now regularly coming across \u003cstrong\u003eSuperficial Private Cloud\u003c/strong\u003e offerings within organizations, where basic virtualization platforms are being given the ���cloud�۝ label. Often teams can self-provision a restricted set of fixed service types with limited access and little ability to customize the centrally governed ���enterprise blueprints,�۝ leading to kludge solutions. Deployment pace regularly remains constrained by manually provisioned infrastructure such as network, firewall and storage. We encourage organizations to more fully consider the costs of mandating the use of an inadequate private cloud offering."}
{"_id":{"$oid":"5a671a48f26229172b81fc82"},"name":"ECMAScript 6","ring":"adopt","quadrant":"languages \u0026 frameworks","isNews":"TRUE","description":"Over many years, JavaScript has grown to become probably the most widely used programming language in the world. Nevertheless, the language itself has a few problems that many have attempted to address by using libraries or even by implementing their own languages that run on top of JavaScript (of which we�۪ve mentioned both \u003ca href=\"https://www.thoughtworks.com/radar/languages-and-frameworks/coffeescript\"\u003eCoffeeScript\u003c/a\u003e and \u003ca href=\"https://www.thoughtworks.com/radar/languages-and-frameworks/clojurescript\"\u003eClojureScript\u003c/a\u003e before). \u003ca href=\"http://es6-features.org/\"\u003e\u003cstrong\u003eECMAScript 6\u003c/strong\u003e\u003c/a\u003e, the new version of JavaScript, addresses many of the concerns of the older versions currently in use. Although browser support is scarce, support from mature transpilers like \u003ca href=\"http://babeljs.io\"\u003eBabel\u003c/a\u003e allows you to write ECMAScript 6 and have it supported in older browsers. For new projects, we strongly suggest starting with ECMAScript 6 from day one."}
{"_id":{"$oid":"5a671a48f26229172b81fc83"},"name":"Presto","ring":"assess","quadrant":"platforms","isNews":"TRUE","description":"\u003cstrong\u003e\u003ca href=\"https://prestodb.io/\"\u003ePresto\u003c/a\u003e\u003c/strong\u003e is an open source distributed SQL query engine designed and optimized for running interactive analytics workloads. Presto's massively parallel processing architecture - combined with advanced code-generation techniques and in-memory processing pipelines - makes it highly scalable. It supports a large subset of ANSI SQL including complex queries, joins, aggregations and window functions. Presto comes with support for a wide range of data sources including \u003cstrong\u003eHive\u003c/strong\u003e, \u003cstrong\u003eCassandra\u003c/strong\u003e, \u003cstrong\u003eMySQL\u003c/strong\u003e and \u003cstrong\u003ePostgreSQL\u003c/strong\u003e, thereby unifying the interactive analytics interface across data stores of an organization. Applications can connect to Presto using its JDBC interface."}
{"_id":{"$oid":"5a671a48f26229172b81fc84"},"name":"Time series databases","ring":"assess","quadrant":"platforms","isNews":"FALSE","description":"A \u003cstrong\u003etime series database\u003c/strong\u003e (TSDB) is a system that is optimized for handling time series data. It allows users to perform CRUD operations on various time series organized as database objects. It also provides the ability to perform statistical\u0026nbsp;calculations on the series as a whole. Although TSDBs\u0026nbsp;are not entirely a new technology we are seeing a renewed interest in the these databases primarily in the realm of IoT applications. This is being facilitated by many open source\u0026nbsp;and commercial\u0026nbsp;platforms (such as\u0026nbsp;\u003cstrong\u003eOpenTSDB\u003c/strong\u003e, \u003cstrong\u003eInfluxDB\u003c/strong\u003e, \u003cstrong\u003eDruid\u003c/strong\u003e, \u003cstrong\u003eBlueFloodDB\u003c/strong\u003e etc.) that have mushroomed recently. Its also worth mentioning that some of these systems use other distributed databases such \u003cstrong\u003eCassandra\u003c/strong\u003e and \u003cstrong\u003eHBase\u003c/strong\u003e as their underlying storage engine."}
{"_id":{"$oid":"5a671a48f26229172b81fc85"},"name":"Application Servers","ring":"hold","quadrant":"platforms","isNews":"FALSE","description":"The rise of containers, phoenix servers and continuous delivery has seen a move away from the usual approach to deploying web applications. Traditionally we have built an artifact and then installed that artifact into an application server. The result was long feedback loops for changes, increased build times and the not insignificant overhead of managing these application servers in production. Many of them are a pain to automate too. Most teams we work with favor bundling an embedded http server within your web application. There are plenty of options available: Jetty, SimpleWeb, Webbit and Owin Self-Host amongst others. Easier automation, easier deployment and a reduction in the amount of infrastructure you have to manage lead us to recommend\u0026nbsp;embedded servers over \u003cstrong\u003eapplication servers \u003c/strong\u003efor future projects."}
{"_id":{"$oid":"5a671a48f26229172b81fc86"},"name":"Nancy","ring":"adopt","quadrant":"languages \u0026 frameworks","isNews":"FALSE","description":"Since we last talked about \u003cstrong\u003e\u003ca href=\"http://nancyfx.org/\"\u003e Nancy\u003c/a\u003e \u003c/strong\u003e on the technology radar it has become the default choice on our .NET projects. Architectures centred around small, vertical slices and microservices simply require light-weight deployment options and low ceremony tooling."}
{"_id":{"$oid":"5a671a48f26229172b81fc87"},"name":"Swift","ring":"adopt","quadrant":"languages \u0026 frameworks","isNews":"TRUE","description":"A year after its public debut, \u003ca href=\"https://developer.apple.com/swift/\"\u003e\u003cstrong\u003eSwift\u003c/strong\u003e\u003c/a\u003e is now our default choice for development in the Apple ecosystem. With the recent release of Swift 2, the language approaches a level of maturity that provides the stability and performance required for most projects. Swift still has issues, especially around tool support, refactoring and testing. However, we feel that these are not substantial enough to warrant avoiding Swift. At the same time, porting large, existing Objective-C codebases is unlikely to pay off. The announcement that Swift will become open source software is a further positive sign. We are hopeful that this will not just be another dumping of internally developed code into a public repository, because Apple has clearly stated that community contributions are encouraged and will be accepted."}
{"_id":{"$oid":"5a671a48f26229172b81fc88"},"name":"Enlive","ring":"trial","quadrant":"languages \u0026 frameworks","isNews":"TRUE","description":"Most templating frameworks like \u003ca href=\"https://mustache.github.io/\"\u003eMustache\u003c/a\u003e or \u003ca href=\"http://freemarker.org/\"\u003eFreeMarker\u003c/a\u003e mix code with markup in a single file to implement complex, dynamic content. \u003ca href=\"https://github.com/cgrand/enlive/wiki\"\u003e\u003cstrong\u003eEnlive\u003c/strong\u003e\u003c/a\u003e is a Clojure-based templating framework that completely separates programming language from HTML markup and employs CSS selectors to find and replace parts of the document. Enlive demonstrates the power of functional programming to implement complex behavior through a series of simple, composable functions acting on a common abstraction. Our teams working in Clojure have found it to be a very useful and straightforward tool."}
{"_id":{"$oid":"5a671a48f26229172b81fc89"},"name":"SignalR","ring":"trial","quadrant":"languages \u0026 frameworks","isNews":"TRUE","description":"We have a number of reservations about the use of HTML5 WebSockets. By allowing the server to initiate actions on the browser, WebSockets departs from the connectionless, request/response model that underpins the World Wide Web today. Security is another big risk with WebSockets. For example, the standard does not impose any cross-origin request policy. However, we do recognize that in certain monitoring or alerting applications, WebSockets can be very useful. If you need to build a .NET WebSockets server, \u003ca href=\"http://signalr.net/\"\u003e\u003cstrong\u003eSignalR\u003c/strong\u003e\u003c/a\u003e conveniently implements much of the additional code you need for a robust production application. This includes some recommended security practices such as validating connection tokens and activating SSL when encryption is needed. Although ThoughtWorks teams have been very happy with SignalR, there are still fundamental issues with WebSockets that you should consider before diving in."}
{"_id":{"$oid":"5a671a48f26229172b81fc8a"},"name":"Ember.js","ring":"assess","quadrant":"languages \u0026 frameworks","isNews":"FALSE","description":"Widespread usage of AngularJS continues on ThoughtWorks projects, although not every experience is positive. We continue to advise teams to assess whether the additional complexity of a single-page JavaScript application is necessary to meet their requirements. \u0026nbsp;We also recommend assessing alternative frameworks, and in this radar edition we highlight \u003ca href=\"http://emberjs.com/\"\u003e\u003cstrong\u003eEmber.js\u003c/strong\u003e\u003c/a\u003e which is growing in popularity within ThoughtWorks. \u0026nbsp;Ember is praised for its approach of opinionated convention over configuration, responsive core team of committers, performance, and build tooling support via Ember CLI."}
{"_id":{"$oid":"5a671a48f26229172b81fc8b"},"name":"Frege","ring":"assess","quadrant":"languages \u0026 frameworks","isNews":"TRUE","description":"Following many other programming languages, one of the language geeks�۪ absolute favourites, \u003ca href=\"https://www.haskell.org/\"\u003eHaskell\u003c/a\u003e, is now also available on the JVM in the form of \u003ca href=\"https://github.com/Frege/frege\"\u003e\u003cstrong\u003eFrege\u003c/strong\u003e\u003c/a\u003e. This brings a purely functional programming language onto the platform, allowing for easy interoperability with other JVM languages and libraries."}
{"_id":{"$oid":"5a671a48f26229172b81fc8c"},"name":"HyperResource","ring":"assess","quadrant":"languages \u0026 frameworks","isNews":"TRUE","description":"\u003cstrong\u003e\u003ca href=\"http://hyperresource.com/doc/\"\u003eHyperResource\u003c/a\u003e\u003c/strong\u003e is a Ruby framework for building a RESTful API client. The framework accepts JSON in \u003cstrong\u003eHAL\u003c/strong\u003e format and dynamically generates a model object complete with hypermedia links. Although the framework is still in its infancy, we like that it embraces \u003ca href=\"http://martinfowler.com/articles/richardsonMaturityModel.html\"\u003eRichardson level 3 REST\u003c/a\u003e for better service discoverability and self-documenting protocols."}
{"_id":{"$oid":"5a671a48f26229172b81fc8d"},"name":"Axon","ring":"assess","quadrant":"languages \u0026 frameworks","isNews":"TRUE","description":"While we still have some reservations about \u003ca href=\"http://martinfowler.com/bliki/CQRS.html\"\u003eCQRS\u003c/a\u003e as a general pattern, the approach can work very well in specific places. In those specific situations, however, a lot of work is left to the developer to properly execute CQRS. \u003cstrong\u003e\u003ca href=\"http://www.axonframework.org/\"\u003eAxon\u003c/a\u003e\u003c/strong\u003e is a framework that can help with this on the JVM, and we�۪ve used it with some success. Although it certainly can�۪t be considered a perfect solution right now, it continues to evolve and may make much more sense than trying to write everything from scratch."}
{"_id":{"$oid":"5a671a48f26229172b81fc8e"},"name":"React.js","ring":"trial","quadrant":"languages \u0026 frameworks","isNews":"FALSE","description":"One benefit of the ongoing avalanche of front-end JavaScript frameworks is that occasionally a new idea crops up that makes us think. \u003ca href=\"http://facebook.github.io/react/\"\u003e\u003cstrong\u003eReact.js\u003c/strong\u003e\u003c/a\u003e is a UI/view framework in which JavaScript functions generate HTML in a reactive data flow.  It differs significantly from frameworks like \u003ca href=\"https://www.thoughtworks.com/radar/languages-and-frameworks/angularjs\"\u003eAngularJS\u003c/a\u003e in that it only allows one-way data bindings, greatly simplifying the rendering logic. We have seen several smaller projects achieve success with React.js, and developers are drawn to its clean, composable approach to componentization."}
{"_id":{"$oid":"5a671a48f26229172b81fc8f"},"name":"Spring Boot","ring":"trial","quadrant":"languages \u0026 frameworks","isNews":"TRUE","description":"\u003ca href=\"http://projects.spring.io/spring-boot\"\u003e\u003cstrong\u003eSpring Boot\u003c/strong\u003e\u003c/a\u003e allows easy setup of standalone Spring-based applications. It's ideal for pulling up new microservices and easy to deploy. It also makes data access less of a pain, thanks to the Hibernate mappings with much less boilerplate code. We like that Spring Boot simplifies Java services built with Spring but have learned to be cautious of the many dependencies. Spring still lurks just beneath the surface. If you�۪re writing microservices with Java, you might also consider using \u003cstrong\u003eDropWizard\u003c/strong\u003e or a microframework like \u003ca href=\"http://sparkjava.com/\"\u003eSpark\u003c/a\u003e to get the benefits of Spring Boot without the enormous weight of Spring."}
{"_id":{"$oid":"5a671a48f26229172b81fc90"},"name":"Material UI","ring":"assess","quadrant":"languages \u0026 frameworks","isNews":"TRUE","description":"\u003ca href=\"http://material-ui.com/\"\u003e\u003cstrong\u003eMaterial UI\u003c/strong\u003e\u003c/a\u003e provides reusable components for use in \u003ca href=\"https://www.thoughtworks.com/radar/languages-and-frameworks/react-js\"\u003eReact\u003c/a\u003e applications that implement Google's Material Design language. Filling a similar space to \u003ca href=\"https://www.thoughtworks.com/radar/languages-and-frameworks/twitter-bootstrap\"\u003eTwitter Bootstrap\u003c/a\u003e, it gets you up and running quickly but doesn't have the same drawbacks as your application grows. \u003ca href=\"http://elemental-ui.com/\"\u003eElemental UI\u003c/a\u003e is worth investigating as an alternative."}
{"_id":{"$oid":"5a671a48f26229172b81fc91"},"name":"React Native","ring":"assess","quadrant":"languages \u0026 frameworks","isNews":"TRUE","description":"Yet another entrant into the cross-platform mobile development world, Facebook�۪s \u003ca href=\"https://facebook.github.io/react-native/\"\u003e\u003cstrong\u003eReact Native\u003c/strong\u003e\u003c/a\u003e brings the React.js programming model to iOS and Android developers. React Native programs are written in JavaScript, but unlike a hybrid framework such as Ionic, React Native gives developers access to native UI components on the target platform. This is an approach we�۪ve seen before (e.g., \u003ca href=\"http://calatrava.github.io/\"\u003eCalatrava\u003c/a\u003e), but React Native has already inspired a substantial developer community and builds on the momentum generated by React.js. This framework could play a significant role in the future of mobile app development."}
{"_id":{"$oid":"5a671a48f26229172b81fc92"},"name":"OkHttp","ring":"assess","quadrant":"languages \u0026 frameworks","isNews":"TRUE","description":"\u003cstrong\u003e\u003ca href=\"http://square.github.io/okhttp/\"\u003eOkHttp\u003c/a\u003e \u003c/strong\u003eis a Java HTTP connection library from Square that provides a fluent interface for creating connections, as well as support for the faster HTTP/2 protocol. Even when using HTTP/1.1, OkHttp can provide performance improvements via connection pooling and transparent gzip compression. Supporting both blocking synchronous and nonblocking asynchronous calls, it can also be used as a drop-in replacement for the widely used Apache HttpClient."}
{"_id":{"$oid":"5a671a48f26229172b81fc94"},"name":"Traveling Rubys","ring":"assess","quadrant":"languages \u0026 frameworks","isNews":false,"description":"\u003ca href=\"http://phusion.github.io/traveling-ruby/\"\u003e\u003cstrong\u003eTraveling Ruby\u003c/strong\u003e\u003c/a\u003e makes it possible to distribute portable, ready-to-run, platform-agnostic Ruby binaries without the need to install an interpreter, packages or additional gems. It decouples running Ruby applications from the development environment they run in."}
{"_id":{"$oid":"5a72f544ea5bc1e00e557b66"},"name":"tech one","ring":"adopt","quadrant":"tools","description":"a long description ...","isNews":true,"__v":0}
